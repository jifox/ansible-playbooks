---
#
# file: include/inc_validate_uplinks_db_tasks.yml
#

- set_fact:
    expected_uplinks_db_version: "1.0"
  check_mode: false
  delegate_to: localhost

- name: Check for duplicate key through linting the uplinks_db.yml file
  block:
    - shell: /usr/bin/yamllint "{{base_dir}}/vars/{{switch_location_group}}/uplinks_db.yml"
      register: lint_result
      ignore_errors: true
      changed_when: false
    - assert:
        msg: "ansible-lint: {{ lint_result.stderr }}"
        that:
          - lint_result.rc == 0
  check_mode: false
  delegate_to: localhost

- name: "Check missing parameter: switch_location_group"
  assert:
    msg: "Missing Parameter: 'switch_location_group' is not defined."
    that:
      - switch_location_group is defined
  check_mode: false
  delegate_to: localhost

- name: Ensure that switch_location_group directory is valid
  stat:
    path: "{{ vars_dir }}/{{ switch_location_group }}/vlan_db.yml"
  register: stat_result
  check_mode: false
  delegate_to: localhost
- assert:
    msg: "Missing File: {{ vars_dir }}/{{ switch_location_group }}/vlan_db.yml or incorrect 'switch_localtion:' variable"
    that:
      - stat_result.stat.exists
  check_mode: false
  delegate_to: localhost

- name: Read in fabric-data - uplinks_db
  include_vars:
    dir: "{{ vars_dir }}/{{ switch_location_group }}"
  check_mode: false
  changed_when: false
  delegate_to: localhost

- name: Ensure directories exists
  include_tasks: "{{ include_dir }}/inc_validate_directories.yml"
  check_mode: false
  delegate_to: localhost

- name: Check uplinks_db database version
  assert:
    msg: "Invalid uplinks_db version {{switch_uplinks_version}} <>  {{expected_uplinks_db_version}}"
    that:
      - switch_uplinks_version == expected_uplinks_db_version
  check_mode: false
  delegate_to: localhost


- name: Generate Check-Data Structure (check_uplinks.yml)
  include_tasks: "{{ include_dir }}/inc_template.yml"
  vars:
    template_name: "gen_validate_uplinks_db_checks.j2"
    template_dest: "{{ host_tmpdir }}/check_uplinks.yml"
    template_suppress_changed: true
  check_mode: false
  changed_when: false
  delegate_to: localhost


- name: Read in the check_uplinks.yml
  include_vars:
    file: "{{ host_tmpdir }}/check_uplinks.yml"
  check_mode: false
  changed_when: false
  delegate_to: localhost

- name: Check for Duplicate-Interfaces
  assert:
    msg: "Error: Duplicate Interface for device '{{item}}' in uplink_db.yml!"
    that: >
      check_intf_list[item] | unique | count
      ==
      check_intf_list[item] | count
  loop: "{{ check_intf_list | flatten}}"
  check_mode: false
  delegate_to: localhost

- name: Check for Duplicate Port-Channel-Numbers
  assert:
    msg: "Error: Duplicate Port-Channel-Nr for device '{{item}}' in uplink_db.yml!"
    that: >
      check_device_channel_nr[item] | unique | count
      ==
      check_device_channel_nr[item] | count
  loop: "{{ check_device_channel_nr | flatten}}"
  check_mode: false
  delegate_to: localhost

- name: Check a single uplink definition
  include_tasks: "{{ include_dir }}/inc_validate_uplinks_db_one_uplink.yml"
  with_items: "{{ all_uplinks }}"
  loop: "{{ switch_uplinks | flatten | list }}"
  loop_control:
    loop_var: check_uplink_id
  check_mode: false
  delegate_to: localhost


####################################################################
# Set Successful Validated Flag
####################################################################

- block:
    - file:
        path: "{{ validation_flags_directory }}"
        state: directory
      changed_when: false
    - file:
        path: "{{ valid_fname }}"
        state: touch
      changed_when: false
  check_mode: false
  delegate_to: localhost


